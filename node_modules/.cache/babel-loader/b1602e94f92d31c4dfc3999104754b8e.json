{"ast":null,"code":"var _jsxFileName = \"/Users/olgashalakhina/Desktop/expenses-react/src/components/Costs/CostsDiagram.js\";\nimport Diagram from \"../Diagram/Diagram\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CostsDiagram = props => {\n  const diagramDataSets = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n\n  for (const cost of props.costs) {\n    const costMonth = cost.date.getMonth();\n    diagramDataSets[costMonth].value += cost.amount;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Diagram, {\n    dataSets: diagramDataSets\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\n_c = CostsDiagram;\nexport default CostsDiagram;\n\nvar _c;\n\n$RefreshReg$(_c, \"CostsDiagram\");","map":{"version":3,"names":["Diagram","CostsDiagram","props","diagramDataSets","label","value","cost","costs","costMonth","date","getMonth","amount"],"sources":["/Users/olgashalakhina/Desktop/expenses-react/src/components/Costs/CostsDiagram.js"],"sourcesContent":["import Diagram from \"../Diagram/Diagram\";\n\nconst CostsDiagram = (props) => {\n  const diagramDataSets = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const cost of props.costs) {\n    const costMonth = cost.date.getMonth();\n    diagramDataSets[costMonth].value += cost.amount;\n  }\n\n  return <Diagram dataSets={diagramDataSets} />;\n};\n\nexport default CostsDiagram;\n"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAC9B,MAAMC,eAAe,GAAG,CACtB;IAAEC,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CADsB,EAEtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAFsB,EAGtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAHsB,EAItB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAJsB,EAKtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CALsB,EAMtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CANsB,EAOtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAPsB,EAQtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CARsB,EAStB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CATsB,EAUtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAVsB,EAWtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAXsB,EAYtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAZsB,CAAxB;;EAeA,KAAK,MAAMC,IAAX,IAAmBJ,KAAK,CAACK,KAAzB,EAAgC;IAC9B,MAAMC,SAAS,GAAGF,IAAI,CAACG,IAAL,CAAUC,QAAV,EAAlB;IACAP,eAAe,CAACK,SAAD,CAAf,CAA2BH,KAA3B,IAAoCC,IAAI,CAACK,MAAzC;EACD;;EAED,oBAAO,QAAC,OAAD;IAAS,QAAQ,EAAER;EAAnB;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAtBD;;KAAMF,Y;AAwBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}